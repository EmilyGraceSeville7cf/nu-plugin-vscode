{
    "alias builtin": {
        "prefix": "alias",
        "description": "\"alias\" invocation",
        "body": "alias ${1:name} = ${2:value}"
    },
    "all builtin": {
        "prefix": "all",
        "description": "\"all\" invocation",
        "body": "${1:command} | all {|${2:el}| ${3:predicate} }"
    },
    "ansi builtin": {
        "prefix": "ansi",
        "description": "\"ansi\" invocation",
        "body": "ansi ${3|black,red,green,yellow,blue,magenta,cyan,white,default,reset|}"
    },
    "ansi gradient builtin": {
        "prefix": "ansi-gradient",
        "description": "\"ansi gradient\" invocation",
        "body": "ansi gradient --${1|fg,bg|}start ${2:0xffffff} --$1end ${3:0xffffff}"
    },
    "ansi link builtin": {
        "prefix": "ansi-link",
        "description": "\"ansi link\" invocation",
        "body": "ansi link --text ${1:value}"
    },
    "any builtin": {
        "prefix": "any",
        "description": "\"any\" invocation",
        "body": "${1:command} | any {|${2:el}| ${3:predicate} }"
    },
    "append builtin": {
        "prefix": "append",
        "description": "\"append\" invocation",
        "body": "${1:command} | append ${2:row}"
    },
    "ast builtin": {
        "prefix": "ast",
        "description": "\"ast\" invocation",
        "body": "ast ${1:pipeline}"
    },
    "bits and builtin": {
        "prefix": "bits-and",
        "description": "\"bits and\" invocation",
        "body": "${1:command} | bits and ${2:value}"
    },
    "bits not builtin": {
        "prefix": "bits-not",
        "description": "\"bits not\" invocation",
        "body": "${1:command} | bits not"
    },
    "bits or builtin": {
        "prefix": "bits-or",
        "description": "\"bits or\" invocation",
        "body": "${1:command} | bits or ${2:value}"
    },
    "bits rol builtin": {
        "prefix": "bits-rol",
        "description": "\"bits rol\" invocation",
        "body": "${1:command} | bits rol ${2:value}"
    },
    "bits ror builtin": {
        "prefix": "bits-ror",
        "description": "\"bits ror\" invocation",
        "body": "${1:command} | bits ror ${2:value}"
    },
    "bits shl builtin": {
        "prefix": "bits-shl",
        "description": "\"bits shl\" invocation",
        "body": "${1:command} | bits shl ${2:value}"
    },
    "bits shr builtin": {
        "prefix": "bits-shr",
        "description": "\"bits shr\" invocation",
        "body": "${1:command} | bits shr ${2:value}"
    },
    "bits xor builtin": {
        "prefix": "bits-xor",
        "description": "\"bits xor\" invocation",
        "body": "${1:command} | bits xor ${2:value}"
    },
    "bytes add builtin": {
        "prefix": "bytes-add",
        "description": "\"bytes add\" invocation",
        "body": "${1:command} | bytes add ${2:value}"
    },
    "bytes at builtin": {
        "prefix": "bytes-at",
        "description": "\"bytes at\" invocation",
        "body": "${1:command} | bytes at ${2:from}..${3:to}"
    },
    "bytes collect builtin": {
        "prefix": "bytes-collect",
        "description": "\"bytes collect\" invocation",
        "body": "${1:command} | bytes collect ${2:separator}"
    },
    "bytes ends-with builtin": {
        "prefix": "bytes-ends-with",
        "description": "\"bytes ends-with\" invocation",
        "body": "${1:command} | bytes ends-with ${2:pattern}"
    },
    "bytes index-of builtin": {
        "prefix": "bytes-index-of",
        "description": "\"bytes index-of\" invocation",
        "body": "${1:command} | bytes index-of ${2:pattern}"
    },
    "bytes remove builtin": {
        "prefix": "bytes-remove",
        "description": "\"bytes remove\" invocation",
        "body": "${1:command} | bytes remove ${2:pattern}"
    },
    "bytes replace builtin": {
        "prefix": "bytes-replace",
        "description": "\"bytes replace\" invocation",
        "body": "${1:command} | bytes replace ${2:search} ${3:replacement}"
    },
    "bytes starts-with builtin": {
        "prefix": "bytes-starts-with",
        "description": "\"bytes starts-with\" invocation",
        "body": "${1:command} | bytes starts-with ${2:pattern}"
    },
    "Create Custom Command": {
        "prefix": "def",
        "body": [
            "# Documentation for ${1:Custom_Command_Name}",
            "def ${1:Custom_Command_Name} [] {",
            "\t# Write some code here",
            "\t${2}",
            "}"
        ],
        "description": "Example: Write a custom command"
    },
    "Custom Command With Parameter": {
        "prefix": "defp",
        "body": [
            "# Documentation for ${1:Custom_Command_Name}",
            "# Written on ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
            "def ${1:Custom_Command_Name} [",
            "\t ${2:Param_Name} # Docs for ${2:Param_Name}",
            "\t] {",
            "\t# Test the parameter",
            "\techo \\$${2:Param_Name}",
            "\t${3}",
            "}"
        ],
        "description": "Example: Write a custom command with a parameter"
    },
    "Custom Command With Switch": {
        "prefix": "defs",
        "body": [
            "# Documentation for ${1:Custom_Command_Name}",
            "# Written on ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
            "def ${1:Custom_Command_Name} [",
            "\t--${2:Long_Switch}(-${3:Short_Switch}) # Docs for ${2:Long_Switch}",
            "\t] {",
            "\t\tlet is_${2:Long_Switch} = $(= \\$${2:Long_Switch} | empty?)\n",
            "\t\tif \\$is_${2:Long_Switch} {",
            "\t\t\techo \\$true",
            "\t\t} {",
            "\t\t\techo \\$false",
            "\t\t}\n",
            "\t# Write some code here",
            "\t${4}",
            "}"
        ],
        "description": "Example: Write a custom command with a switch"
    },
    "Create an Alias": {
        "prefix": "alias",
        "body": [
            "# Documentation for ${1:Alias_Name}",
            "alias ${1:Alias_Name} = ${2}"
        ],
        "description": "Create an alias"
    }
}